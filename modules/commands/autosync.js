const OWNER_ID = "100092006324917";

module.exports.config = {
  name: "autosync",
  version: "1.0.0", 
  hasPermssion: 2,
  credits: "TOHI-BOT-HUB",
  description: "Auto database sync control",
  commandCategory: "ADMIN",
  usages: "[start|stop|status|sync|restore]",
  cooldowns: 5,
  usePrefix: true
};

module.exports.run = async function({ api, event, args }) {
  const { threadID, messageID, senderID } = event;

  if (senderID !== OWNER_ID) {
    return api.sendMessage(`‚õîÔ∏è ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ owner ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®!`, threadID, messageID);
  }

  const autoSync = require('../../utils/autoSyncDatabase');
  const command = (args[0] || "status").toLowerCase();

  try {
    switch (command) {
      case "start":
        autoSync.startAutoSync();
        return api.sendMessage("‚úÖ Auto-sync ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá! ‡¶™‡ßç‡¶∞‡¶§‡¶ø 2 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞ ‡¶™‡¶∞ data PostgreSQL ‡¶è save ‡¶π‡¶¨‡ßá‡•§", threadID, messageID);

      case "stop":
        return api.sendMessage("‚èπÔ∏è Auto-save ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);

      case "status":
        const status = autoSync.getStatus();
        let statusMsg = "üìä Auto-Save ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏:\n\n";
        statusMsg += `üîÑ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶Ü‡¶õ‡ßá: ${status.isRunning ? "‚úÖ ‡¶π‡ßç‡¶Ø‡¶æ‡¶Å" : "‚ùå ‡¶®‡¶æ"}\n`;
        statusMsg += `üì° PostgreSQL: ${status.postgresAvailable ? "‚úÖ ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§" : "‚ùå ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶®‡¶Ø‡¶º"}\n`;
        statusMsg += `‚è∞ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ save: ${status.nextSaveIn}\n`;
        statusMsg += `üéØ Mode: ${status.mode}`;
        return api.sendMessage(statusMsg, threadID, messageID);

      case "sync":
        const result = await autoSync.syncFromPostgreSQL();
        if (result) {
          return api.sendMessage("‚úÖ Manual restore ‡¶∏‡¶´‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá! PostgreSQL ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶¨ data restore ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", threadID, messageID);
        } else {
          return api.sendMessage("‚ùå Manual restore ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
        }

      case "save":
        const saveResult = await autoSync.saveToPostgreSQL();
        if (saveResult) {
          return api.sendMessage("‚úÖ Manual save ‡¶∏‡¶´‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá! ‡¶∏‡¶¨ data PostgreSQL ‡¶è save ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", threadID, messageID);
        } else {
          return api.sendMessage("‚ùå Manual save ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
        }

      case "restore":
        api.sendMessage("üîÑ PostgreSQL ‡¶•‡ßá‡¶ï‡ßá data restore ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...", threadID, messageID);
        const restoreResult = await autoSync.syncFromPostgreSQL();

        if (restoreResult) {
          return api.sendMessage("‚úÖ ‡¶∏‡¶¨ data ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá PostgreSQL ‡¶•‡ßá‡¶ï‡ßá restore ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
        } else {
          return api.sendMessage("‚ùå Data restore ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
        }

      default:
        return api.sendMessage("‚ùå ‡¶Ö‡¶¨‡ßà‡¶ß command! ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®: start, stop, status, sync, restore", threadID, messageID);
    }
  } catch (error) {
    console.error("Auto-sync command error:", error);
    return api.sendMessage(`‚ùå Error: ${error.message}`, threadID, messageID);
  }
};